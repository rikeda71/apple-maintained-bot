// Code generated by MockGen. DO NOT EDIT.
// Source: scraper.go

// Package repository is a generated GoMock package.
package repository

import (
	goquery "github.com/PuerkitoBio/goquery"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockScraper is a mock of Scraper interface
type MockScraper struct {
	ctrl     *gomock.Controller
	recorder *MockScraperMockRecorder
}

// MockScraperMockRecorder is the mock recorder for MockScraper
type MockScraperMockRecorder struct {
	mock *MockScraper
}

// NewMockScraper creates a new mock instance
func NewMockScraper(ctrl *gomock.Controller) *MockScraper {
	mock := &MockScraper{ctrl: ctrl}
	mock.recorder = &MockScraperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockScraper) EXPECT() *MockScraperMockRecorder {
	return m.recorder
}

// Scrape mocks base method
func (m *MockScraper) Scrape(url string) (*goquery.Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Scrape", url)
	ret0, _ := ret[0].(*goquery.Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Scrape indicates an expected call of Scrape
func (mr *MockScraperMockRecorder) Scrape(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scrape", reflect.TypeOf((*MockScraper)(nil).Scrape), url)
}

// ScrapeMaintainedPage mocks base method
func (m *MockScraper) ScrapeMaintainedPage(doc *goquery.Document) ([]string, []string, []string) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScrapeMaintainedPage", doc)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].([]string)
	return ret0, ret1, ret2
}

// ScrapeMaintainedPage indicates an expected call of ScrapeMaintainedPage
func (mr *MockScraperMockRecorder) ScrapeMaintainedPage(doc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScrapeMaintainedPage", reflect.TypeOf((*MockScraper)(nil).ScrapeMaintainedPage), doc)
}
