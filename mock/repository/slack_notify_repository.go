// Code generated by MockGen. DO NOT EDIT.
// Source: slack_notify_repository.go

// Package repository is a generated GoMock package.
package repository

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/s14t284/apple-maitained-bot/domain"
	reflect "reflect"
)

// MockSlackNotifyRepository is a mock of SlackNotifyRepository interface
type MockSlackNotifyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSlackNotifyRepositoryMockRecorder
}

// MockSlackNotifyRepositoryMockRecorder is the mock recorder for MockSlackNotifyRepository
type MockSlackNotifyRepositoryMockRecorder struct {
	mock *MockSlackNotifyRepository
}

// NewMockSlackNotifyRepository creates a new mock instance
func NewMockSlackNotifyRepository(ctrl *gomock.Controller) *MockSlackNotifyRepository {
	mock := &MockSlackNotifyRepository{ctrl: ctrl}
	mock.recorder = &MockSlackNotifyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSlackNotifyRepository) EXPECT() *MockSlackNotifyRepositoryMockRecorder {
	return m.recorder
}

// HookToSlack mocks base method
func (m *MockSlackNotifyRepository) HookToSlack(pages []domain.Page, kind string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HookToSlack", pages, kind)
	ret0, _ := ret[0].(error)
	return ret0
}

// HookToSlack indicates an expected call of HookToSlack
func (mr *MockSlackNotifyRepositoryMockRecorder) HookToSlack(pages, kind interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HookToSlack", reflect.TypeOf((*MockSlackNotifyRepository)(nil).HookToSlack), pages, kind)
}
