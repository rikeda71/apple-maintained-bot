// Code generated by MockGen. DO NOT EDIT.
// Source: page_parse_repository.go

// Package web is a generated GoMock package.
package web

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/s14t284/apple-maitained-bot/domain"
	model "github.com/s14t284/apple-maitained-bot/domain/model"
)

// MockPageParseRepository is a mock of PageParseRepository interface.
type MockPageParseRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPageParseRepositoryMockRecorder
}

// MockPageParseRepositoryMockRecorder is the mock recorder for MockPageParseRepository.
type MockPageParseRepositoryMockRecorder struct {
	mock *MockPageParseRepository
}

// NewMockPageParseRepository creates a new mock instance.
func NewMockPageParseRepository(ctrl *gomock.Controller) *MockPageParseRepository {
	mock := &MockPageParseRepository{ctrl: ctrl}
	mock.recorder = &MockPageParseRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPageParseRepository) EXPECT() *MockPageParseRepositoryMockRecorder {
	return m.recorder
}

// ParseIPadPage mocks base method.
func (m *MockPageParseRepository) ParseIPadPage(page domain.Page) (*model.IPad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseIPadPage", page)
	ret0, _ := ret[0].(*model.IPad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseIPadPage indicates an expected call of ParseIPadPage.
func (mr *MockPageParseRepositoryMockRecorder) ParseIPadPage(page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseIPadPage", reflect.TypeOf((*MockPageParseRepository)(nil).ParseIPadPage), page)
}

// ParseMacPage mocks base method.
func (m *MockPageParseRepository) ParseMacPage(page domain.Page) (*model.Mac, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseMacPage", page)
	ret0, _ := ret[0].(*model.Mac)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseMacPage indicates an expected call of ParseMacPage.
func (mr *MockPageParseRepositoryMockRecorder) ParseMacPage(page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseMacPage", reflect.TypeOf((*MockPageParseRepository)(nil).ParseMacPage), page)
}

// ParseWatchPage mocks base method.
func (m *MockPageParseRepository) ParseWatchPage(page domain.Page) (*model.Watch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseWatchPage", page)
	ret0, _ := ret[0].(*model.Watch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseWatchPage indicates an expected call of ParseWatchPage.
func (mr *MockPageParseRepositoryMockRecorder) ParseWatchPage(page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseWatchPage", reflect.TypeOf((*MockPageParseRepository)(nil).ParseWatchPage), page)
}
